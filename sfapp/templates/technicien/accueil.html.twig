{% extends 'base.html.twig' %}
{% block title %}Accueil Technicien{% endblock %}

{% block body %}
    <div class="containerAccueil">

        <!-- Contenu principal à 60% -->
        <div class="listeBat" style="flex: 0 0 60%; padding-right: 20px;">
            <h1 class="text-3xl font-bold text-gray-800">Bienvenue, {{ app.user.username }}</h1>
            {% for batiment, salles in diagnostics %}
                <!-- Contenu déjà existant -->
                <div class="batiment">
                    <h2>Bâtiment : {{ batiment }}</h2>
                    <div class="sallesrow">
                        {% for salle, issues in salles %}
                            <div class="cardTaches" id="card">
                                <div class="cardMainInfos">
                                    <div class="card-top">
                                        <p class="room-name">{{ salle }}</p>
                                        {% if issues is same as([]) %}
                                            <span class="text-danger">Aucune donnée disponible</span>
                                        {% else %}
                                            {% if issues is empty %}
                                                <span class="text-success">Aucun problème détecté</span>
                                            {% else %}
                                                <span style="color: #0041b5;">Problèmes détectés : {{ issues|join(', ') }}</span>
                                            {% endif %}
                                        {% endif %}
                                        <div class="etat">
                                            <p class="status" id="status">
                                            <div class="pastilleStatus"
                                                 style="background-color: {% if issues is same as([]) %}red{% elseif issues is empty %}green{% else %}orange{% endif %}">
                                            </div>
                                            </p>
                                        </div>
                                    </div>
                                </div>

                                <div class="card-content" style="display: none;">
                                    <p class="location">Salle : {{ salle }}</p>
                                    {% if issues is same as([]) %}
                                        <h3 style="font-size: 20px; text-align: center">Aucune donnée disponible !</h3>
                                    {% elseif issues is empty %}
                                        <h3 style="font-size: 18px;">Aucun problème détecté.</h3>
                                    {% else %}
                                        <h3 style="font-size: 18px;">Détails des problèmes détectés :</h3>
                                        <ul>
                                            {% for issue in issues %}
                                                <li>{{ issue }}</li>
                                            {% endfor %}
                                        </ul>
                                    {% endif %}
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                </div>
            {% else %}
                <p>Aucun bâtiment trouvé.</p>
            {% endfor %}
        </div>

        <!-- Sidebar éventuelle à 40% -->
        <div class="sidebar" style="flex: 0 0 40%; padding-left: 20px;">
            <div class="text-center mb-8">

            </div>

            <!-- Form Section -->
            <div class=" shadow-md rounded-lg p-6 mb-10">
                <h2 class="">Ajouter un commentaire</h2>

                {{ form_start(form) }}

                <div class="mb-6">
                    <label for="salle" class="">Choisissez une salle</label>
                    {{ form_widget(form.salle, {
                        'attr': {
                            'class': 'form-select block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm',
                            'id': 'salle',
                        }
                    }) }}
                </div>

                <div class="mb-6">
                    <label for="description" class="block text-sm font-medium text-gray-700 mb-2">Description</label>
                    {{ form_widget(form.description, {
                        'attr': {
                            'class': 'form-control block w-full rounded-md border-gray-300 ',
                            'rows': 3,
                            'placeholder': 'Écrivez votre commentaire ici...'
                        }
                    }) }}
                </div>

                <div class="mb-3 w-25 ">
                    {{ form_widget(form.submit, {
                        'attr': {
                            'class': 'btn btn-info  ', 'style width' : '50px'
                        }
                    }) }}
                </div>

                {{ form_end(form) }}
            </div>

            <!-- Comments Section -->
            <div>
                <h2 class="text-2xl font-semibold text-gray-700 mb-4">Commentaires récents</h2>

                {% for tache in taches[:5] %}
                    <div class="border-b border-gray-300 py-4 flex flex-col" style="border-bottom: 1px solid">
                        <div class="flex justify-between items-center" style="display: flex">
                            <p class="text-sm text-gray-600">{{ tache.technicien.nom }}, {{ tache.dateAjout|date('Y-m-d H:i') }}</p>
                            <form method="post" action="{{ path('app_technicien_commentaire_supprimer', {'id': tache.id}) }}"
                                  onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer ce commentaire ?');">
                                <input type="hidden" name="_token" value="{{ csrf_token(tache.id) }}">
                                <button type="submit"
                                        class="btn btn-danger px-4 py-2 text-sm"
                                        style="width : 100%; margin-left: 10px">
                                    Supprimer
                                </button>
                            </form>
                        </div>
                        <p class="text-gray-800 mt-2">{{ tache.salle.nom }} : {{ tache.description }}</p>
                    </div>
                {% endfor %}

                <div id="comments-container"></div>
                <button id="voir-plus" class="voir-plus btn btn-info" data-id="{{ app.user.id }}" data-offset="0">Voir plus</button>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const cards = document.querySelectorAll(".cardTaches");

                cards.forEach((card) => {
                    const cardContent = card.querySelector(".card-content");
                    const cardId = card.id; // ID unique de la carte

                    card.addEventListener("click", function (event) {
                        // Vérifie si la carte est déjà agrandie
                        const isExpanded = card.classList.contains("expanded");

                        // Fermer toutes les autres cartes
                        cards.forEach((otherCard) => {
                            if (otherCard.id !== cardId) { // Ne pas affecter la carte cliquée
                                otherCard.querySelector(".card-content").style.display = "none";
                                otherCard.classList.remove("expanded");
                            }
                        });

                        // Basculer l'état de la carte cliquée
                        if (!isExpanded) {
                            cardContent.style.display = "block";
                            card.classList.add("expanded");
                        } else {
                            cardContent.style.display = "none";
                            card.classList.remove("expanded");
                        }

                        // Stopper la propagation de l'événement
                        event.stopPropagation();
                    });
                });

                // Fermer toutes les cartes lorsqu'on clique à l'extérieur
                document.addEventListener("click", function () {
                    cards.forEach((card) => {
                        card.querySelector(".card-content").style.display = "none";
                        card.classList.remove("expanded");
                    });
                });
            });
        </script>
    <script>
        const userId = "{{ app.user.id }}";
        document.getElementById('voir-plus').addEventListener('click', function () {
            const btn = this;
            const offset = parseInt(btn.getAttribute('data-offset'), 10);

            fetch(`/taches/${userId}/ajax?offset=${offset + 5}`)
                .then(response => {
                    if (!response.ok) {
                        console.log("ca rentre");
                        throw new Error(`HTTP Error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (!Array.isArray(data) || data.length === 0) {
                        alert('No more tasks to display.');
                        return;
                    }

                    const container = document.getElementById('comments-container');
                    data.forEach(tache => {
                        const row = document.createElement('div');
                        row.classList.add('border-b', 'border-gray-300', 'py-4', 'flex', 'justify-between', 'items-start');

                        const formattedDate = new Intl.DateTimeFormat('fr-FR', {
                            dateStyle: 'short',
                            timeStyle: 'short'
                        }).format(new Date(tache.dateAjout));

                        row.innerHTML = `
                    <div  style="display: flex" >
                        <p class="text-sm text-gray-600 mb-2">${tache.nomTechnicien}, ${formattedDate}<form method="post" action="/technicien/${userId}/commentaire-supprimer/${tache.id}"
                          onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cette tâche ?');">
                        <input type="hidden" name="_token" value="${tache.id}">
                        <button type="submit"
                                        class="btn btn-danger px-4 py-2 text-sm"
                                        style="width : 100%;  margin-left: 10px">
                                    Supprimer
                                </button>                    </form></p>
                    </div>
                    <div style="border-bottom: 1px solid;>
                        <p class="text-gray-800">${tache.salleNom} : ${tache.description}</p>
                    </div>

                `;
                        container.appendChild(row);
                    });

                    btn.setAttribute('data-offset', offset + data.length);
                })
                .catch(error => {
                    console.error('AJAX Error:', error);
                    alert('An error occurred while loading tasks.');
                });
        });

    </script>

{% endblock %}