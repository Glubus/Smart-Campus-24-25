{% extends 'base.html.twig' %}

{% block title %}Details des plans{% endblock %}

{% block body %}
    {# Link to the CSS file#}
    <link rel="stylesheet" href="{{ asset("styles/detail_plan/liste.scss") }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

    <div id="sidebar-wrapper">
        <div id="deco-sidebar"></div>
        <div id="sidebar">
            <div class="switch-menu"><i class="fa fa-exchange"></i></div>
            <div id="toolbox" class="toolbox {% if form.nom.vars.value is empty %}hidden{% endif %}">
                <div class="research"><i class="fa fa-search"></i>
                    {{ form_start(form) }}
                    {{ form_widget(form) }}
                    {{ form_end(form) }}
                </div>
                <h2>Filtrer par</h2>
                <fieldset class="white-container">
                    <legend>Nombre de SA attribue</legend>
                    <div>
                        <input type="checkbox" name="nbSA" value="sa0" checked />
                        <label>0</label>
                    </div>
                    <div>
                        <input type="checkbox" name="nbSA" value="sa1" checked />
                        <label>1</label>
                    </div>
                    <div>
                        <input type="checkbox" name="nbSA" value="saN" checked />
                        <label>>1</label>
                    </div>
                </fieldset>

                <fieldset class="white-container">
                    <legend>Etat d'installation</legend>
                    <div>
                        <input type="checkbox" name="etat" value="prete" checked />
                        <label><i class="fa fa-check pret"></i>Installe</label>
                    </div>
                    <div>
                        <input type="checkbox" name="etat" value="install" checked />
                        <label><i class="material-icons installation">timelapse</i>A installer</label>
                    </div>
                    <div>
                        <input type="checkbox" name="etat" value="desinstall" checked />
                        <label><i class="material-icons deinstallation">timelapse</i>A desinstaller</label>
                    </div>
                </fieldset>

                <h2>Actions</h2>
                <div>
                    <div class="white-container" style="cursor: pointer" id="deplier"><i class="fas fa-eye action-button"></i>Tout deplier</div>
                    <div class="white-container" style="cursor: pointer" id="plier"><i class="fas fa-eye-slash action-button"></i>Tout plier</div>
                </div>
            </div>


            <div id="filter-etage" class="filter-etage {% if form.nom.vars.value is not empty %}hidden{% endif %}">
                {% if is_granted('ROLE_CHARGE_DE_MISSION') %}
                    <a href="#" class="stats">
                        <span class="fa fa-bar-chart"></span> Diagnostic du batiment
                    </a>
                {% endif %}
                <select id="batiment_selection" onchange="updateEtages()">
                    <option value="" disabled selected>selectionner un batiment</option>
                    {% for batiment in batiments %}
                        <option value="{{ batiment.id }}"
                                {% if batiment.id == selected_batiment %}
                        selected
                                {% endif %}>
                            {{ batiment.nom }}
                        </option>
                    {% endfor %}
                </select>
                <div id="etagesDiv">
                    <div class="vertical-line"></div>
                    <span>
                        <p id="etagesToutes"></p>
                        <ul id="etagesList">
                            <!-- Les elements de la liste seront genere ici par le script-->
                        </ul>
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class="page-content">
        <h1 class="text-center mb-4"> Details {{ plan_select.nom }}</h1>


        <div class="aucunResultat {% if salles|length != 0 %}hidden{% endif %}"><h2>Aucune salle selectionnee...</h2></div>

        <div id="detail_plan">
                {% for salle in salles %}
                    <div class="block-salle-container
                        {% if salle.detailPlans|length == 0 %}
                            sa0
                        {% elseif salle.detailPlans|length == 1%}
                            sa1
                        {% else %}
                            saN
                        {% endif %}">
                        <div class="block-salle">
                            <div class="circle-niveau">{{ salle.etage.niveau }}</div>
                            <div class="nom-salle">{{ salle.nom }}
                                {% if is_granted('ROLE_CHARGE_DE_MISSION') %}
                                <a href="{{ path('app_dashboard_salle', { 'batiment' :salle.etage.batiment.nom, 'salle':salle.nom }) }}" class="btn btn-info btn-lg">
                                <span class="fa fa-bar-chart"></span>
                                </a>
                                {% endif %}
                            </div>
                            <div class="SAattribue">
                                <div class = "nbrSAattribue">
                                {% if salle.detailPlans|length == 0 %}
                                    Aucun SA attribue
                                {% elseif salle.detailPlans|length == 1%}
                                    {% set plan = salle.detailPlans[0] %}
                                    {{ plan.sa.nom }} attribue
                                {% else %}
                                    {{ salle.detailPlans|length }} SA attribues
                                {% endif %}
                                </div>
                                <div class="actions">
                                    <i class="toggle caseBleu fas fa-eye" data-salle-id="{{ salle.id }}"></i>
                                    {% if is_granted('ROLE_CHARGE_DE_MISSION') %}
                                        <a href="{{ path('app_lier_ajout', {'salle':salle.id, 'id' : plan_select.id}) }}" class="caseBleu material-icons" role="button">add_circle</a>
                                    {% endif %}
                                </div>
                            </div>
                            <div class="afficher-{{ salle.id }} gray-container">
                                {% for plan in salle.detailPlans %}
                                    <div class="ligne-attribue
                                        {% if plan.etatSA == 'pret' %}
                                            prete
                                        {% elseif plan.etatSA == 'installation' %}
                                            install
                                        {% else %}
                                            desinstall
                                        {% endif %}">
                                        <div>
                                        {% if plan.etatSA == 'pret' %}
                                            <i class="fa fa-check pret"></i>
                                        {% elseif plan.etatSA == 'installation' %}
                                            <i class="material-icons installation">timelapse</i>
                                        {% else %}
                                            <i class="material-icons deinstallation">timelapse</i>
                                        {% endif %}
                                        </div>
                                            <span class="infoSA">
                                                <div>{{ plan.sa.nom }}</div>
                                                <div style="font-size: 16px">
                                                    {% if plan.etatSA == 'pret' %}
                                                        installe le {{ plan.dateAjout|date('d/m/Y') }}
                                                    {% elseif plan.etatSA == 'installation' %}
                                                        demande d'installation faite le {{ plan.dateAjout|date('d/m/Y') }}
                                                    {% else %}
                                                        demande de deinstallation faite le {{ plan.dateEnleve|date('d/m/Y') }}
                                                    {% endif %}
                                                </div>
                                            </span>
                                        {% if is_granted('ROLE_CHARGE_DE_MISSION') %}
                                                <a href="{{ path('app_lier_suppression', {id: plan.id }) }}" role="button" class="supprAttr material-icons">cancel</a>
                                        {% elseif is_granted('ROLE_TECHNICIEN') %}
                                            {% if plan.etatSA != 'pret' %}
                                                <a href="{{ path('app_lier_validation', {id: plan.id }) }}" role="button" class="validerDemande material-icons">check_circle</a>
                                            {% endif %}
                                        {% endif %}
                                    </div>
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                {% endfor %}
        </div>
    </div>

    <script>
        const batiments = {{ batiments|json_encode|raw }};

        // Function to update the etage dropdown
        function updateEtages() {
            const batSelect = document.getElementById("batiment_selection");
            const etagesList = document.getElementById("etagesList");
            const etagesToutes = document.getElementById("etagesToutes");
            const selectedId = batSelect.value;
            const diagnosticLink = document.querySelector('.stats');  // Get the existing button link

            // Clear previous étage buttons
            etagesToutes.innerHTML = '';
            etagesList.innerHTML = '';

            // Get selected plan
            const selectedBatiment = batiments.find(b => b.id == selectedId);

            {% if is_granted('ROLE_CHARGE_DE_MISSION') %}
                diagnosticLink.href = `${selectedBatiment.nom}`;
            {% endif %}

            if (selectedBatiment) {
                let selectedEtage = -1;
                const link = document.createElement('a');  // Create a new <a> element
                link.href = `?batiment=${selectedId}`;  // Set the href attribute
                link.textContent = "Afficher toutes";  // Set the link text
                link.classList.add('etage-affiche-toutes');  // Add a CSS class for styling (optional)
                {%if selected_etage is null %} {% if selected_batiment is not null %} if({{selected_batiment}} == selectedId) link.classList.add('darken');{% endif %}
                {% else %} selectedEtage = {{ selected_etage }};
                {% endif %}

                etagesToutes.appendChild(link);


                // Loop through the etage names in the selected batiment
                selectedBatiment.nomEtages.forEach((etageName, index) => {
                    const line = document.createElement('div');  // Create a new <div> element
                    line.classList.add('horizontal-line');

                    const link = document.createElement('a');  // Create a new <a> element
                    link.href = `?batiment=${selectedId}&etage=${index}`;  // Use the index for linking
                    link.textContent = `Niveau ${etageName}`;  // Display the etage name
                    link.classList.add('etage-list-item');  // Add a CSS class for styling

                    // Highlight the selected etage
                    {% if selected_batiment is not null %} if({{selected_batiment}} == selectedId && selectedEtage == index) link.classList.add('darken'){% endif %};

                    const listItem = document.createElement('li');  // Create a <li> element
                    listItem.appendChild(line);  // Append the horizontal line
                    listItem.appendChild(link);  // Append the <a> element

                    etagesList.appendChild(listItem);  // Append the <li> to the list
                });
            }
        }

        window.onload = function() {
            const selectionBatiment = document.getElementById('batiment_selection');

            // Check if the selected option is set programmatically
            const selectedValue = selectionBatiment.value;

            // Manually trigger the onchange event if there's a pre-selected value
            if (selectedValue) {
                updateEtages();
            }
        };

        document.addEventListener("DOMContentLoaded", function () {
            const toggleButtons = document.querySelectorAll(".toggle");
            const b1 = document.getElementById('filter-etage');
            const b2 = document.getElementById('toolbox');
            const deplier = document.getElementById('deplier');
            const plier = document.getElementById('plier');

            toggleButtons.forEach((button) => {
                button.addEventListener("click", function () {
                    const salleId = this.getAttribute("data-salle-id");
                    const details = document.querySelectorAll(`.afficher-${salleId}`);

                    details.forEach(detail => { detail.classList.toggle('hidden'); });
                    this.classList.toggle("fa-eye");
                    this.classList.toggle("fa-eye-slash");
                });
            });

            const switchMenu = document.querySelector(".switch-menu");

            switchMenu.addEventListener("click", function () {
                    b1.classList.toggle('hidden');
                    b2.classList.toggle('hidden');
            });

            deplier.addEventListener("click", function () {
                const details = document.querySelectorAll(".toggle.fa-eye-slash");
                details.forEach(detail => { detail.click(); });
            });

            plier.addEventListener("click", function () {
                const details = document.querySelectorAll(".toggle.fa-eye");
                details.forEach(detail => { detail.click(); });
            });
        });

        // Function to toggle the visibility of the elements based on checkbox state
        function toggleVisibility() {
            const targets = document.querySelectorAll(`.${this.value}`);

            targets.forEach(target => { target.classList.toggle('hidden')});

            // Check if this.value is '1', '0', or '>1'
            if (['sa1', 'sa0', 'saN'].includes(this.value)) {
                // Check if there are any elements with class 'block-salle-container' visible
                const blockSalleContainers = document.querySelectorAll('.block-salle-container');
                const visibleContainers = Array.from(blockSalleContainers).filter(container => !container.classList.contains('hidden'));


                const messageAucunRes = document.querySelector('.aucunResultat');

                if (visibleContainers.length === 0) {
                    messageAucunRes.classList.remove('hidden');
                }
                else {
                    messageAucunRes.classList.add('hidden');
                }
            }
        }

        // Add event listeners to all checkboxes to detect changes
        document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
            checkbox.addEventListener('change', toggleVisibility); // Re-run the toggleVisibility function on checkbox change
        });
    </script>
{% endblock %}
