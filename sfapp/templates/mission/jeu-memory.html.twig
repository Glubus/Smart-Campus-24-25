{% extends 'base.html.twig' %}

{% block title %}Jeu de Memory{% endblock %}

{% block body %}
    <style>
        body {
            background-color: #17203c;
        }
    </style>

    <h1 style="position: absolute; top: 20px; left: 20px; font-size: 2rem; color: white;">50M</h1>

    <div style="display: flex; width: 100%; justify-content: center; padding-top: 20px;">
        <a  href="{{ path('app_accueil') }}" style="width: 40%"><img src="{{ asset('styles/logo.png') }}" style="width: 100%;" alt="Image"></a>
    </div>
    <img src="{{ asset('styles/VagueBlanc.png') }}" style="width: 100%;" alt="Vague">

    <div style="display: flex; justify-content: center; width: 100%; padding-bottom: 10vh; margin-top: 0%;">
        <div id="memory-board" style="display: flex; flex-wrap: wrap; justify-content: center; width: 50%;"></div>
        <script>
            const board = document.getElementById('memory-board');
            const cardsArray = [];

            {% for card in cards %}
            cardsArray.push({ id: '{{ card.id }}', text: '{{ card.text }}' });
            {% endfor %}

            let flippedCards = [];
            let matchedCards = 0;

            function createBoard() {
                cardsArray.sort(() => Math.random() - 0.5);

                cardsArray.forEach(card => {
                    const cardElement = document.createElement('div');
                    cardElement.classList.add('card');
                    cardElement.textContent = '';
                    cardElement.setAttribute('data-id', card.id);
                    cardElement.setAttribute('data-value', card.text);
                    cardElement.addEventListener('click', flipCard);
                    board.appendChild(cardElement);
                });
            }

            function flipCard() {
                if (flippedCards.length === 2 || this.classList.contains('flipped') || this.classList.contains('matched')) return;

                this.classList.add('flipped');
                this.textContent = this.getAttribute('data-value');
                flippedCards.push(this);

                if (flippedCards.length === 2) {
                    checkMatch();
                }
            }

            function checkMatch() {
                const [firstCard, secondCard] = flippedCards;

                if (firstCard.getAttribute('data-id') === secondCard.getAttribute('data-id')) {
                    firstCard.classList.add('matched');
                    secondCard.classList.add('matched');
                    matchedCards += 2;
                    if (matchedCards === cardsArray.length) {
                        setTimeout(() => {
                            window.location.href = '{{ path("app_mission_new_reponse") }}';
                        }, 500);
                    }
                } else {
                    setTimeout(() => {
                        firstCard.classList.remove('flipped');
                        secondCard.classList.remove('flipped');
                        firstCard.textContent = '';
                        secondCard.textContent = '';
                    }, 1000);
                }

                flippedCards = [];
            }

            createBoard();
        </script>
    </div>
{% endblock %}