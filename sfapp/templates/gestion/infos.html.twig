{% extends 'template/infos.html.twig' %}

{% block liste %}
    <li class="list-group-item">
        <strong>Nom :</strong> {{ item.nom }}
    </li>
    <li class="list-group-item">
        <strong>Prenom :</strong> {{ item.prenom }}
    </li>
    <li class="list-group-item">
        <strong>Adresse :</strong> {{ item.email }}
    </li>
    <li class="list-group-item">
        <strong>Adresse :</strong> {{ item.adresse }}
    </li>
    <li class="list-group-item">
        <strong>Role :</strong>
            {% for role in item.roles %}
                {% if  role=="ROLE_USER"  %}
                    Role Utilisateur
                {% elseif role == "ROLE_TECHNICIEN" %}
                    Role Technicien
                {% elseif role=="ROLE_CHARGE_DE_MISSION" %}
                    Role Charge De Mission
                {% endif %}
            {% endfor %}
    </li>
{% endblock %}
{% block ajouts %}
    <h1 class="mb-4">Interventions de {{ item.username }}</h1>

    {% if interventions is not empty %}
        <table class="table table-striped table-bordered table-hover">
            <thead class="thead-dark">
            <tr>
                <th scope="col">ID</th>
                <th scope="col">Salle</th>
                <th scope="col">État</th>
                <th scope="col">Date de l'Intervention</th>
            </tr>
            </thead>
            <tbody>
            {% for intervention in interventions %}
                <tr>
                    <td>{{ intervention.id }}</td>
                    <td>{{ intervention.salle.nom }}</td>
                    <td>
                                <span class="badge bg-{{ intervention.etat == 'EN_COURS' ? 'warning' : (intervention.etat == 'TERMINEE' ? 'success' : 'danger') }}">
                                    {{ intervention.etat }}
                                </span>
                    </td>
                    <td>{{ intervention.dateIntervention|date('d/m/Y H:i') }}</td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
    {% else %}
        <div class="alert alert-info" role="alert">
            Aucune intervention trouvée pour ce technicien.
        </div>
    {% endif %}
{% endblock %}

{% block stylesheet %}
    <style>
        body {
            background: linear-gradient(50deg, #001932, #0041B5);
            color: #ffffff;
            font-family: 'Roboto', sans-serif;
            margin: 0;
            padding: 0;
        }
        .card{
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0); /* Card-shadow visible */
            border:0px;
            background: rgba(255, 255, 255, 0.0);
        }
        .card-header{
            background: rgba(255, 255, 255, 0.0);
        }
        .container {
            margin: 50px auto;
            max-width: 800px;
            background: rgba(255, 255, 255, 0.35);
            border-radius: 12px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.6); /* Card-shadow visible */
            padding: 30px;
        }

        h1 {
            font-size: 28px;
            text-align: center;
            color: #FFFFFF;
            text-shadow: 1px 1px 2px #000000;
            margin-top:20px;
            margin-bottom: 15px;
        }
        ul {
            list-style: none;
            padding: 0;
        }
        li {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            padding: 15px 20px;
            margin-bottom: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: background 0.3s ease, transform 0.2s ease;
        }
        .list-group-item:last-child {
            border-radius:10px;
        }

        li:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: scale(1.02); /* Légère mise en avant au survol */
        }

        li strong {
            font-weight: 700;
            color: #000000;
        }

        .table-container {
            margin-top: 30px;
            background: rgba(0, 0, 50, 0.3); /* Fond transparent */
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.6); /* Ombre forte */
        }

        .table-container table {
            width: 100%;
            border-collapse: collapse;
            font-size: 16px;
            color: #ffffff;
        }
        .card-title{
            color:#FFFFFF;
        }
        .table-container th,
        .table-container td {
            text-align: left;
            padding: 10px 15px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        }

        .table-container th {
            background: rgba(0, 25, 50, 0.9);
            color: #FFFFFF;
            text-transform: uppercase;
            font-size: 14px;
        }

        .table-container tr:hover {
            background: rgba(255, 255, 255, 0.1);
            cursor: pointer;
        }

        .badge {
            padding: 6px 12px;
            border-radius: 4px;
            font-weight: bold;
            text-transform: uppercase;
            font-size: 12px;
            color: #ffffff;
        }

        .badge-warning {
            background: #ffa500;
        }

        .badge-success {
            background: #28a745;
        }

        .badge-danger {
            background: #dc3545;
        }

        .alert {
            margin-top: 20px;
            padding: 20px;
            background: rgba(0, 123, 255, 0.7);
            border-radius: 8px;
            text-align: center;
            font-size: 16px;
            color: #ffffff;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);
        }

        .alert a {
            color: #FFD700;
            font-weight: bold;
            text-decoration: none;
        }

        .alert a:hover {
            text-decoration: underline;
        }

        /* Graphique */
        .graph-container {
            margin-top: 40px;
            padding: 20px;
            background: rgba(0, 0, 50, 0.3); /* Fo

    </style>
{% endblock %}
{#
document.addEventListener('DOMContentLoaded', function() {
            console.log("DOM prêt");
            const ctx = document.getElementById('salleGraph').getContext('2d');

            // Récupérer les données depuis Twig
            const labels = {{ labels|json_encode|raw }};
            const temp = {{ tempData|json_encode|raw }};
            const co2 = {{ co2Data|json_encode|raw }};
            const humi = {{ humiData|json_encode|raw }};

            // Créer le graphique
            const salleGraph = new Chart(ctx, {
                type: 'line', // Type du graphique
                data: {
                    labels: labels, // Labels pour l'axe X
                    datasets: [
                        {
                            label: 'Température',
                            data: {{ tempData|json_encode|raw }}, // Données
                            borderColor: 'rgba(255, 217, 0, 1)',
                            backgroundColor: 'rgba(255, 251, 120, 0.2)',
                            borderWidth: 2,
                            tension: 0.4
                        },
                        {
                            label: 'CO2',
                            data: {{ co2Data|json_encode|raw }}, // Données
                            borderColor: 'rgba(255, 113, 113, 1)',
                            backgroundColor: 'rgba(255, 186, 186, 0.2)',
                            borderWidth: 2,
                            tension: 0.4
                        },
                        {
                            label: 'Humidité',
                            data: {{ humiData|json_encode|raw }}, // Données
                            borderColor: 'rgba(106, 223, 255, 1)',
                            backgroundColor: 'rgba(185, 240, 255, 0.2)',
                            borderWidth: 2,
                            tension: 0.4
                        },
                    ]
                %},
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: false, // L'axe Y commence à zéro
                            min: Math.min(temp),            // Valeur minimale de l'axe Y
                            max: Math.max(...temp),          // Valeur maximale de l'axe Y
                            stepSize: 10,      // Intervalle des ticks
                            ticks: {
                                color: '#000000', // Couleur des ticks
                            }
                        }
                    }
                }
            })
        }});
#}